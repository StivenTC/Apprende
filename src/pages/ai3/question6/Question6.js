/* eslint-disable react-hooks/exhaustive-deps */
import { useState } from "react";
import { FeedbackCorrect } from "../../../components/layout/feedback/Feedback";
import { FeedbackClue } from "../../../components/layout/feedback/FeedbackClue";
import saveActivity from "../../../helpers/saveActivity";
import { GiHummingbird } from "react-icons/gi";

export function Question6({ goView, setResult, nextQuestion }) {

  const [selectedDrop, setSelectedDrop] = useState('');
  const [showFeedback, setFeedback] = useState("");
  const [attempts, setAttempts] = useState(1);
  const [corrects, setCorrects] = useState([]);
  const [dataAnswers, setDataAnswers] = useState([]);

  const quarters = ["6/3", "1/5", "4/5", "1/3"];
  const clueTexts = [
    "Â¿Las fracciones de todas las aves tienen el mismo denominador? Si no es asÃ­, encuentra un denominador comÃºn entre todas ellas para poder compararlas.",
    ""
  ];
  const Drop = () => {
    return <svg className="water-drop" width="30" height="42" viewBox="0 0 44 42" fill="none" xmlns="http://www.w3.org/2000/svg">
      <g opacity="0.8">
        <g clip-path="url(#clip0_3373_55193)">
          <path d="M10.6395 12.1875L3.92652 13.6247V15.2555V20.6373C3.72096 20.5527 3.49869 20.509 3.2739 20.509C3.0491 20.509 2.82676 20.5527 2.6212 20.6373C2.28845 20.7298 2.00745 20.9389 1.83756 21.2204C1.66767 21.5019 1.62217 21.8337 1.71076 22.1458C1.90167 22.4134 2.19582 22.6028 2.53256 22.6749C2.86931 22.747 3.223 22.6962 3.52067 22.5331C3.75801 22.448 3.96969 22.3109 4.13774 22.1334C4.3058 21.956 4.42528 21.7434 4.48595 21.5138V21.5138C4.49742 21.4292 4.49742 21.3436 4.48595 21.259V15.1434L10.1021 13.8999V19.302C9.894 19.2196 9.67016 19.1771 9.44396 19.1771C9.21777 19.1771 8.99386 19.2196 8.78578 19.302C8.60634 19.3234 8.43473 19.3833 8.2846 19.4771C8.13447 19.5709 8.00996 19.696 7.921 19.8424C7.83203 19.9888 7.78104 20.1524 7.7721 20.3203C7.76316 20.4882 7.79653 20.6557 7.86951 20.8096C7.94249 20.9634 8.05305 21.0993 8.19248 21.2064C8.3319 21.3135 8.49634 21.3889 8.67264 21.4266C8.84894 21.4643 9.03224 21.4633 9.20803 21.4236C9.38383 21.3839 9.54725 21.3066 9.68525 21.1979C9.96194 21.1064 10.2028 20.9401 10.3768 20.7203C10.5508 20.5004 10.65 20.2372 10.6615 19.9646V19.9646V13.7572L10.6395 12.1875Z" fill="#073B4C" />
          <path d="M5.72595 30.2659L5.50656 30.1334C4.40965 29.4811 4.21219 29.1142 4.11347 28.8084C4.12184 28.7685 4.12065 28.7274 4.10992 28.6881C4.09919 28.6487 4.07919 28.612 4.05141 28.5807C4.02362 28.5494 3.9887 28.5241 3.94918 28.5068C3.90965 28.4895 3.86654 28.4805 3.82284 28.4805C3.77914 28.4805 3.73596 28.4895 3.69644 28.5068C3.65692 28.5241 3.62199 28.5494 3.59421 28.5807C3.56642 28.612 3.54643 28.6487 3.53569 28.6881C3.52496 28.7274 3.52378 28.7685 3.53215 28.8084V38.1653C3.20502 38.002 2.83944 37.9166 2.46812 37.9166C2.09679 37.9166 1.73128 38.002 1.40416 38.1653C1.14868 38.199 0.905092 38.2874 0.692616 38.4235C0.48014 38.5595 0.304534 38.7396 0.179649 38.9494C0.0547643 39.1592 -0.0159416 39.3931 -0.0270242 39.6327C-0.0381069 39.8722 0.0107337 40.1109 0.115779 40.3299C0.220825 40.5489 0.379207 40.7423 0.578333 40.8948C0.77746 41.0473 1.01195 41.1547 1.26336 41.2087C1.51478 41.2627 1.77625 41.2617 2.02719 41.2058C2.27813 41.15 2.51168 41.0408 2.70947 40.8868C3.11308 40.7543 3.46361 40.5106 3.71445 40.1883C3.96529 39.866 4.10447 39.4803 4.11347 39.0827V34.0882V29.8175C4.44979 30.1097 4.81733 30.3692 5.21037 30.5921L5.42976 30.7144C6.52667 31.3668 7.6236 32.0904 7.17387 33.1607C7.14895 33.2283 7.15329 33.3023 7.18605 33.367C7.21881 33.4317 7.27738 33.482 7.34934 33.5072C7.42212 33.5304 7.50174 33.5263 7.57135 33.4959C7.64095 33.4654 7.69512 33.411 7.72232 33.3442C8.31464 31.7745 6.63638 30.796 5.72595 30.2659Z" fill="#073B4C" />
          <path d="M41.419 7.10874L41.2216 6.99662C40.2125 6.39525 40.0479 6.09966 39.9492 5.78369C39.9492 5.71881 39.9215 5.65659 39.8721 5.61071C39.8227 5.56484 39.7557 5.53906 39.6859 5.53906C39.6161 5.53906 39.5492 5.56484 39.4998 5.61071C39.4504 5.65659 39.4227 5.71881 39.4227 5.78369V14.3456C39.1236 14.1983 38.7903 14.1213 38.4519 14.1213C38.1135 14.1213 37.7802 14.1983 37.4812 14.3456C37.0468 14.4687 36.6805 14.7435 36.4596 15.1122C36.2387 15.481 36.1803 15.915 36.2965 16.323C36.544 16.6762 36.9299 16.9258 37.3722 17.0191C37.8145 17.1123 38.2785 17.0418 38.6658 16.8224C39.033 16.7012 39.352 16.4795 39.5811 16.1866C39.8101 15.8938 39.9385 15.5433 39.9492 15.1814V10.5845V6.71123C40.2508 6.97424 40.5817 7.20659 40.9364 7.40433L41.1448 7.52664C42.1649 8.11782 43.1302 8.77016 42.7353 9.74866C42.723 9.77877 42.7172 9.81084 42.7183 9.84304C42.7193 9.87524 42.7272 9.90693 42.7415 9.93629C42.7558 9.96565 42.7761 9.9921 42.8014 10.0141C42.8267 10.0361 42.8565 10.0533 42.8889 10.0646C42.9545 10.0851 43.026 10.0818 43.089 10.0553C43.1521 10.0288 43.2021 9.9812 43.2289 9.92194C43.8103 8.48476 42.2527 7.5878 41.419 7.10874Z" fill="#073B4C" />
          <path d="M35.5398 22.7517C34.8842 21.2784 33.6596 20.086 32.1065 19.4085C30.6739 18.8065 29.0602 18.6875 27.5434 19.0722C26.7594 19.2597 26.0169 19.5737 25.3496 19.9997C25.2838 19.6532 25.2179 19.3066 25.1631 18.9804C25.0424 18.3179 24.9327 17.635 24.834 16.9419C25.512 16.3525 26.1357 15.7116 26.6988 15.0257C28.1537 13.4093 29.0788 11.4388 29.3642 9.34831C30.0443 3.08998 27.8944 0.083125 26.1503 0.236016C22.3221 0.77623 22.8596 6.8409 23.5835 13.1196C23.0732 13.7179 22.5237 14.2863 21.9382 14.8218L20.8413 15.8411C20.4903 16.1571 20.1173 16.524 19.7444 16.9215C18.2253 18.4424 17.0636 20.2405 16.333 22.2013C15.9445 23.2124 15.7793 24.2859 15.8471 25.3577C15.915 26.4294 16.2145 27.4775 16.7279 28.4393C17.7731 30.2197 19.4696 31.5936 21.5104 32.3125C23.3025 32.9516 25.222 33.2228 27.1375 33.1076C27.324 34.0045 27.4885 34.8709 27.6201 35.6965C28.2015 37.8676 27.3678 39.7736 25.9199 40.4973C25.4731 40.6906 24.9803 40.7743 24.4888 40.7404C23.9972 40.7065 23.5231 40.5561 23.1119 40.3036H23.3422C23.6118 40.328 23.8837 40.3006 24.1414 40.2231C24.399 40.1456 24.6367 40.0198 24.8398 39.8533C25.0428 39.6868 25.2069 39.4833 25.3217 39.2554C25.4365 39.0276 25.4996 38.7802 25.5071 38.5286C25.5147 38.2771 25.4664 38.0269 25.3655 37.7934C25.2645 37.5599 25.1129 37.3482 24.9202 37.1715C24.7274 36.9948 24.4976 36.8568 24.245 36.7661C23.9924 36.6755 23.7225 36.634 23.4519 36.6444C22.9415 36.6388 22.449 36.8192 22.08 37.1469C21.7109 37.4746 21.4947 37.9235 21.4775 38.3976C21.4775 38.4791 21.4775 38.5607 21.4775 38.6422C21.5271 39.0246 21.7079 39.382 21.993 39.6615C21.993 39.7328 22.0918 39.8042 22.1576 39.8755C22.642 40.3938 23.2807 40.7672 23.9933 40.9486C24.7058 41.13 25.4602 41.1113 26.1613 40.8948C26.6652 40.7248 27.1228 40.4542 27.5019 40.102C27.8809 39.7497 28.1722 39.3245 28.3551 38.8563C28.5804 38.3345 28.6958 37.7774 28.6951 37.2152C28.6672 36.6315 28.6049 36.0497 28.5086 35.4723C28.366 34.6569 28.2015 33.8007 28.026 32.9241C29.6519 32.7265 31.2186 32.2274 32.633 31.4563C34.2008 30.5553 35.3477 29.1404 35.8469 27.4914C36.3298 25.9252 36.2215 24.2527 35.5398 22.7517V22.7517ZM27.0388 2.53957C27.8066 2.774 27.9053 3.74231 27.8943 4.36407C27.8771 5.84477 27.4745 7.29959 26.7207 8.60424C26.0084 9.83089 25.221 11.0186 24.3624 12.1615C23.9455 5.89298 25.4922 2.09109 27.0388 2.53957V2.53957ZM22.2563 30.8753C20.7047 30.1726 19.464 28.9908 18.7462 27.5321C18.4509 26.8104 18.3179 26.04 18.3556 25.2686C18.3934 24.4972 18.601 23.7412 18.9656 23.0473C19.7843 21.5451 20.9008 20.1999 22.2563 19.0824C22.5744 18.8072 22.9145 18.5218 23.3532 18.2058L23.9017 17.7777L24.2965 17.4719C24.3843 18.0019 24.472 18.4912 24.5488 19.062C24.6256 19.6328 24.7134 19.9895 24.8011 20.4482C23.5907 21.4489 22.792 22.8093 22.5419 24.2968C22.2918 25.7843 22.6057 27.3063 23.43 28.6024L23.6275 28.9081C23.518 28.465 23.4411 28.0155 23.3971 27.5627C23.2528 26.37 23.4535 25.1632 23.9785 24.0666C24.2657 23.4713 24.6713 22.9318 25.1741 22.4765C25.5251 24.4132 25.898 26.2682 26.271 28.0214C26.5342 29.3872 26.8084 30.6919 27.0717 31.9354C25.3984 31.9453 23.747 31.5817 22.2563 30.8753V30.8753ZM34.8487 27.3181C34.7173 28.0381 34.4148 28.7219 33.9632 29.3196C33.5116 29.9173 32.9223 30.414 32.2381 30.7734C30.9128 31.4761 29.429 31.881 27.9053 31.9558C27.6421 30.6715 27.3459 29.3261 27.0278 27.8787C26.6 26.0134 26.1722 24.0258 25.7664 21.9567C26.4485 21.4977 27.2313 21.1844 28.0589 21.0394C29.1939 20.852 30.3635 20.9918 31.4105 21.44C32.4576 21.8882 33.332 22.6234 33.9164 23.5468C34.6972 24.6619 35.0276 25.9981 34.8487 27.3181V27.3181Z" fill="#073B4C" />
        </g>
      </g>
      <defs>
        <clipPath id="clip0_3373_55193">
          <rect width="43.3605" height="40.9034" fill="white" transform="translate(0 0.226562)" />
        </clipPath>
      </defs>
    </svg>
  };

  const Splash = () => {
    return <svg className="water-drop" width="30" height="42" viewBox="0 0 44 42" fill="none" xmlns="http://www.w3.org/2000/svg">
      <g opacity="0.8">
        <g clip-path="url(#clip0_3373_55193)">
          <path d="M10.6395 12.1875L3.92652 13.6247V15.2555V20.6373C3.72096 20.5527 3.49869 20.509 3.2739 20.509C3.0491 20.509 2.82676 20.5527 2.6212 20.6373C2.28845 20.7298 2.00745 20.9389 1.83756 21.2204C1.66767 21.5019 1.62217 21.8337 1.71076 22.1458C1.90167 22.4134 2.19582 22.6028 2.53256 22.6749C2.86931 22.747 3.223 22.6962 3.52067 22.5331C3.75801 22.448 3.96969 22.3109 4.13774 22.1334C4.3058 21.956 4.42528 21.7434 4.48595 21.5138V21.5138C4.49742 21.4292 4.49742 21.3436 4.48595 21.259V15.1434L10.1021 13.8999V19.302C9.894 19.2196 9.67016 19.1771 9.44396 19.1771C9.21777 19.1771 8.99386 19.2196 8.78578 19.302C8.60634 19.3234 8.43473 19.3833 8.2846 19.4771C8.13447 19.5709 8.00996 19.696 7.921 19.8424C7.83203 19.9888 7.78104 20.1524 7.7721 20.3203C7.76316 20.4882 7.79653 20.6557 7.86951 20.8096C7.94249 20.9634 8.05305 21.0993 8.19248 21.2064C8.3319 21.3135 8.49634 21.3889 8.67264 21.4266C8.84894 21.4643 9.03224 21.4633 9.20803 21.4236C9.38383 21.3839 9.54725 21.3066 9.68525 21.1979C9.96194 21.1064 10.2028 20.9401 10.3768 20.7203C10.5508 20.5004 10.65 20.2372 10.6615 19.9646V19.9646V13.7572L10.6395 12.1875Z" fill="#073B4C" />
          <path d="M5.72595 30.2659L5.50656 30.1334C4.40965 29.4811 4.21219 29.1142 4.11347 28.8084C4.12184 28.7685 4.12065 28.7274 4.10992 28.6881C4.09919 28.6487 4.07919 28.612 4.05141 28.5807C4.02362 28.5494 3.9887 28.5241 3.94918 28.5068C3.90965 28.4895 3.86654 28.4805 3.82284 28.4805C3.77914 28.4805 3.73596 28.4895 3.69644 28.5068C3.65692 28.5241 3.62199 28.5494 3.59421 28.5807C3.56642 28.612 3.54643 28.6487 3.53569 28.6881C3.52496 28.7274 3.52378 28.7685 3.53215 28.8084V38.1653C3.20502 38.002 2.83944 37.9166 2.46812 37.9166C2.09679 37.9166 1.73128 38.002 1.40416 38.1653C1.14868 38.199 0.905092 38.2874 0.692616 38.4235C0.48014 38.5595 0.304534 38.7396 0.179649 38.9494C0.0547643 39.1592 -0.0159416 39.3931 -0.0270242 39.6327C-0.0381069 39.8722 0.0107337 40.1109 0.115779 40.3299C0.220825 40.5489 0.379207 40.7423 0.578333 40.8948C0.77746 41.0473 1.01195 41.1547 1.26336 41.2087C1.51478 41.2627 1.77625 41.2617 2.02719 41.2058C2.27813 41.15 2.51168 41.0408 2.70947 40.8868C3.11308 40.7543 3.46361 40.5106 3.71445 40.1883C3.96529 39.866 4.10447 39.4803 4.11347 39.0827V34.0882V29.8175C4.44979 30.1097 4.81733 30.3692 5.21037 30.5921L5.42976 30.7144C6.52667 31.3668 7.6236 32.0904 7.17387 33.1607C7.14895 33.2283 7.15329 33.3023 7.18605 33.367C7.21881 33.4317 7.27738 33.482 7.34934 33.5072C7.42212 33.5304 7.50174 33.5263 7.57135 33.4959C7.64095 33.4654 7.69512 33.411 7.72232 33.3442C8.31464 31.7745 6.63638 30.796 5.72595 30.2659Z" fill="#073B4C" />
          <path d="M41.419 7.10874L41.2216 6.99662C40.2125 6.39525 40.0479 6.09966 39.9492 5.78369C39.9492 5.71881 39.9215 5.65659 39.8721 5.61071C39.8227 5.56484 39.7557 5.53906 39.6859 5.53906C39.6161 5.53906 39.5492 5.56484 39.4998 5.61071C39.4504 5.65659 39.4227 5.71881 39.4227 5.78369V14.3456C39.1236 14.1983 38.7903 14.1213 38.4519 14.1213C38.1135 14.1213 37.7802 14.1983 37.4812 14.3456C37.0468 14.4687 36.6805 14.7435 36.4596 15.1122C36.2387 15.481 36.1803 15.915 36.2965 16.323C36.544 16.6762 36.9299 16.9258 37.3722 17.0191C37.8145 17.1123 38.2785 17.0418 38.6658 16.8224C39.033 16.7012 39.352 16.4795 39.5811 16.1866C39.8101 15.8938 39.9385 15.5433 39.9492 15.1814V10.5845V6.71123C40.2508 6.97424 40.5817 7.20659 40.9364 7.40433L41.1448 7.52664C42.1649 8.11782 43.1302 8.77016 42.7353 9.74866C42.723 9.77877 42.7172 9.81084 42.7183 9.84304C42.7193 9.87524 42.7272 9.90693 42.7415 9.93629C42.7558 9.96565 42.7761 9.9921 42.8014 10.0141C42.8267 10.0361 42.8565 10.0533 42.8889 10.0646C42.9545 10.0851 43.026 10.0818 43.089 10.0553C43.1521 10.0288 43.2021 9.9812 43.2289 9.92194C43.8103 8.48476 42.2527 7.5878 41.419 7.10874Z" fill="#073B4C" />
          <path d="M35.5398 22.7517C34.8842 21.2784 33.6596 20.086 32.1065 19.4085C30.6739 18.8065 29.0602 18.6875 27.5434 19.0722C26.7594 19.2597 26.0169 19.5737 25.3496 19.9997C25.2838 19.6532 25.2179 19.3066 25.1631 18.9804C25.0424 18.3179 24.9327 17.635 24.834 16.9419C25.512 16.3525 26.1357 15.7116 26.6988 15.0257C28.1537 13.4093 29.0788 11.4388 29.3642 9.34831C30.0443 3.08998 27.8944 0.083125 26.1503 0.236016C22.3221 0.77623 22.8596 6.8409 23.5835 13.1196C23.0732 13.7179 22.5237 14.2863 21.9382 14.8218L20.8413 15.8411C20.4903 16.1571 20.1173 16.524 19.7444 16.9215C18.2253 18.4424 17.0636 20.2405 16.333 22.2013C15.9445 23.2124 15.7793 24.2859 15.8471 25.3577C15.915 26.4294 16.2145 27.4775 16.7279 28.4393C17.7731 30.2197 19.4696 31.5936 21.5104 32.3125C23.3025 32.9516 25.222 33.2228 27.1375 33.1076C27.324 34.0045 27.4885 34.8709 27.6201 35.6965C28.2015 37.8676 27.3678 39.7736 25.9199 40.4973C25.4731 40.6906 24.9803 40.7743 24.4888 40.7404C23.9972 40.7065 23.5231 40.5561 23.1119 40.3036H23.3422C23.6118 40.328 23.8837 40.3006 24.1414 40.2231C24.399 40.1456 24.6367 40.0198 24.8398 39.8533C25.0428 39.6868 25.2069 39.4833 25.3217 39.2554C25.4365 39.0276 25.4996 38.7802 25.5071 38.5286C25.5147 38.2771 25.4664 38.0269 25.3655 37.7934C25.2645 37.5599 25.1129 37.3482 24.9202 37.1715C24.7274 36.9948 24.4976 36.8568 24.245 36.7661C23.9924 36.6755 23.7225 36.634 23.4519 36.6444C22.9415 36.6388 22.449 36.8192 22.08 37.1469C21.7109 37.4746 21.4947 37.9235 21.4775 38.3976C21.4775 38.4791 21.4775 38.5607 21.4775 38.6422C21.5271 39.0246 21.7079 39.382 21.993 39.6615C21.993 39.7328 22.0918 39.8042 22.1576 39.8755C22.642 40.3938 23.2807 40.7672 23.9933 40.9486C24.7058 41.13 25.4602 41.1113 26.1613 40.8948C26.6652 40.7248 27.1228 40.4542 27.5019 40.102C27.8809 39.7497 28.1722 39.3245 28.3551 38.8563C28.5804 38.3345 28.6958 37.7774 28.6951 37.2152C28.6672 36.6315 28.6049 36.0497 28.5086 35.4723C28.366 34.6569 28.2015 33.8007 28.026 32.9241C29.6519 32.7265 31.2186 32.2274 32.633 31.4563C34.2008 30.5553 35.3477 29.1404 35.8469 27.4914C36.3298 25.9252 36.2215 24.2527 35.5398 22.7517V22.7517ZM27.0388 2.53957C27.8066 2.774 27.9053 3.74231 27.8943 4.36407C27.8771 5.84477 27.4745 7.29959 26.7207 8.60424C26.0084 9.83089 25.221 11.0186 24.3624 12.1615C23.9455 5.89298 25.4922 2.09109 27.0388 2.53957V2.53957ZM22.2563 30.8753C20.7047 30.1726 19.464 28.9908 18.7462 27.5321C18.4509 26.8104 18.3179 26.04 18.3556 25.2686C18.3934 24.4972 18.601 23.7412 18.9656 23.0473C19.7843 21.5451 20.9008 20.1999 22.2563 19.0824C22.5744 18.8072 22.9145 18.5218 23.3532 18.2058L23.9017 17.7777L24.2965 17.4719C24.3843 18.0019 24.472 18.4912 24.5488 19.062C24.6256 19.6328 24.7134 19.9895 24.8011 20.4482C23.5907 21.4489 22.792 22.8093 22.5419 24.2968C22.2918 25.7843 22.6057 27.3063 23.43 28.6024L23.6275 28.9081C23.518 28.465 23.4411 28.0155 23.3971 27.5627C23.2528 26.37 23.4535 25.1632 23.9785 24.0666C24.2657 23.4713 24.6713 22.9318 25.1741 22.4765C25.5251 24.4132 25.898 26.2682 26.271 28.0214C26.5342 29.3872 26.8084 30.6919 27.0717 31.9354C25.3984 31.9453 23.747 31.5817 22.2563 30.8753V30.8753ZM34.8487 27.3181C34.7173 28.0381 34.4148 28.7219 33.9632 29.3196C33.5116 29.9173 32.9223 30.414 32.2381 30.7734C30.9128 31.4761 29.429 31.881 27.9053 31.9558C27.6421 30.6715 27.3459 29.3261 27.0278 27.8787C26.6 26.0134 26.1722 24.0258 25.7664 21.9567C26.4485 21.4977 27.2313 21.1844 28.0589 21.0394C29.1939 20.852 30.3635 20.9918 31.4105 21.44C32.4576 21.8882 33.332 22.6234 33.9164 23.5468C34.6972 24.6619 35.0276 25.9981 34.8487 27.3181V27.3181Z" fill="#073B4C" />
        </g>
      </g>
      <defs>
        <clipPath id="clip0_3373_55193">
          <rect width="43.3605" height="40.9034" fill="white" transform="translate(0 0.226562)" />
        </clipPath>
      </defs>
    </svg>
  };

  const selectDrop = (id) => {
    let correctAnswers = [0, 2];
    let okAnswers = corrects;
    let ans = dataAnswers;
    ans.push(quarters[id])
    setDataAnswers(ans)

    let data = {
      'ENTRE3-Reto 6- Aves': dataAnswers,
      'ENTRE3-Reto 6 Veces': attempts - 1,
    }
    setSelectedDrop(id);
    if (correctAnswers.includes(id)) {
      okAnswers.push(id);
      setCorrects(okAnswers);
      if (okAnswers.length >= 2) {
        saveActivity(data)
        setFeedback('correct');
        //saveUser({ ...userData, rainDrop: true });
        setResult(true);
      }
    } else if (attempts < 3) {
      setTimeout(function () {
        setSelectedDrop('');
        setFeedback('clue');
        setAttempts(attempts + 1);
      }, 500);
    } else {
      //saveUser({ ...userData, rainDrop: false });
      setResult(false);
      data['ENTRE3-Reto 6 Veces'] = attempts
      saveActivity(data)
      setTimeout(function () {
        goView(2);
      }, 500);
    }
  };

  const getClasses = (index) => {
    let style = "";
    if (selectedDrop === index) {
      style += " answered";
    }
    if (corrects.includes(index)) {
      style += " answered correct";
    }
    return style;
  };

  return (
    <div className="birds">
      <div className="birds-body">
        <div className="birds-header">
          <p className="birds-title">Reto 6</p>
          <p className="birds-description">Selecciona todas las aves que tienen <strong>fracciones mayores</strong> a la que aparece en la carta.</p>
          <div className="birds-header-quest">
            <div className="birds-header-quest-drops">
              {[...Array(2)].map((item, i) => <div key={i}
                className={`${i < corrects.length ? "fill-mini-drop" : ""}`}>
                <GiHummingbird />
              </div>
              )}
            </div>
            <div className="scales-fractions"><span>20</span>
              <span>45</span>
            </div>
          </div>
        </div>
        <div className="birds-body">
          <div className="slide-to-waves">
            {[...Array(4)].map(() => <div className="birds-activity">
              {quarters.map((quart, i) => <div
                key={quart}
                onClick={() => selectDrop(i)}
                className={`birds-activity-drop ${getClasses(i)}`}>
                <Drop />
                <div className="scales-fractions">
                  <span>{quart.split(/\//)[0]}</span>
                  <span>{quart.split(/\//)[1]}</span>
                </div>
              </div>
              )}
            </div>)}
          </div>
        </div>
      </div>
      {showFeedback === 'correct' && <FeedbackCorrect goView={nextQuestion} view={7} />}
      {showFeedback === 'clue' && <FeedbackClue goView={setFeedback} attempt={attempts} message={clueTexts} />}
    </div>
  );
}